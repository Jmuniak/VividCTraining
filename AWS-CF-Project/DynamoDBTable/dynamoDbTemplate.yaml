AWSTemplateFormatVersion: 2010-09-09
Resources:
 ## DynamoDB Table
  Letterkenny:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: TownFolkTable
      AttributeDefinitions:
        - AttributeName: "Persons Name"
          AttributeType: "S"
        - AttributeName: "Location"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Persons Name"
          KeyType: "HASH"
        - AttributeName: "Location"
          KeyType: "RANGE"
      TimeToLiveSpecification:
        AttributeName: "ExpirationTime"
        Enabled: true
      ProvisionedThroughput: # Scaling factors on your table.
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
    DependsOn:
      - DynamoDBQueryPolicy

  DynamoDBQueryPolicy:
    Type: AWS::IAM::Policy # Quotes in demo
    Properties:
      PolicyName: DynamoDBQueryPolicy # This can be a different name than the 'logical resource name' and the DependsOn still works. 
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "dynamodb:Query"
            Resource: "*" # uses "*" in demo but he Recommended using the ARN of the table we are creating. "!GetAtt Letterkenny.Arn" doesn't work because its a Circular Dependency between resources: [DynamoDBQueryPolicy, Letterkenny]
      Roles:
        - Ref: "TownFolkQueryRole"

  TownFolkQueryRole:
    Type: AWS::IAM::Role # Quotes in demo
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "dynamodb.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"